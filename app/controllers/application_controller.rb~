class ApplicationController < ActionController::Base
  # Prevent CSRF attacks by raising an exception.
  # For APIs, you may want to use :null_session instead.
  include CanCan::ControllerAdditions

  check_authorization
  rescue_from CanCan::AccessDenied do |exception|
    redirect_to root_url, :alert => exception.message
  end

  protect_from_forgery with: :exception
  before_action :configure_permitted_parameters, if: :devise_controller?
#define set_header in application_controller.rb:
  def set_header(p_type, filename)
    case p_type
      when 'xls'
        headers['Content-Type'] = "application/vnd.ms-excel; charset=UTF-8'"
        headers['Content-Disposition'] = "attachment; filename=\"#{filename}\""
        headers['Cache-Control'] = ''

    when 'msword'
      headers['Content-Type'] = "application/vnd.ms-word; charset=UTF-8"
     headers['Content-Disposition'] = "attachment; filename=\"#{filename}\""
     headers['Cache-Control'] = ''

    end
  end

  protected

  def configure_permitted_parameters
    devise_parameter_sanitizer.for(:sign_up) << :user_id
  end
  def configure_permitted_parameters
    devise_parameter_sanitizer.for(:sign_in) { |u| u.permit(:username ) }
  end
end
